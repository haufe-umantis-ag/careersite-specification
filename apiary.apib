FORMAT: 1A9

# Career Site

The career site is the applicant-facing component of the Haufe Talent Attraction ecosystem. It manages job ads, traces application status, hosts company-applicant communication.

## Machine to machine [/careersite/v1/m2m]

Machine to machine operations for systems integration purposes.

### import job opportunities [POST /careersite/v1/m2m/opportunities/job_import]

imports opportunities that can relate to masterdata. The token must be obtained from integration microservice or new authentication service.

As a response the list of ids of successfully processed postings is returned

+ Request (application/json)
    + Headers

            Accept-Charset: utf-8
            X-FORWARDED-HOST: localhost

    + Body
    + Attributes (JobEventList)

+ Response 200 (application/json)

### search by criteria  [GET /careersite/v1/m2m/opportunities{?newer_than}{?location_country}{?location_province_state}{?location_city}{?location_zip}{?keywords}{?with_details}{?corporate_functions}{?brands}{?experience_levels}{?divisions}{?radius}]

Returns a summary of job opportunities matching search criteria. If more than one search criteria is
present, then all of them needs to match.

+ Parameters

    + newer_than (optional, string, `2018-05-01`) ... ISO8601 format date, to be compared with posting start date
    + location_country (optional, array[string], `USA,Canada`) ... filter for country, match: any of, comma-separated
    + location_province_state (optional, array[string], `California,Oregon`) ... filter for state or province, match: any of, comma-separated
    + location_city (optional, array[string], `Portland,San Fransisco`) ... filter for city, match: any of, comma-separated
    + location_zip (optional, array[string], `12345,54321`) ... filter for zip code, match: any of, comma-separated
    + keywords (optional, array[string], `java,kafka`) ... filter for keywords, match: any of, comma-separated
    + with_details (required, boolean, `true`) ... If only a summary or full details should be returned. Summary is without large texts, like responsibilities, qualifications, benefits, additional information, apply url - see MergeJobSummaryEvent
    + corporate_functions ( optional, array[string] ) ... or search. Jobs have only one corporate function. Specifies jobs only with the defined corporate functions
    + brands ( optional, array[string] ) ... if Nike, Hurley specified- exclude Converse and Jordan
    + experience_levels ( optional, array[string] ) ... Director, Individual Contributor.  I don't this this is consistent though. Not sure how this will work
    + divisions ( optional, array[string] ) ... corporate, retail, distribution.  
    + radius ( optional, int ) ... number for the radius from location information, in kilometers. Need to discuss how this would work  
    
+ Request (application/json)

    + Headers
    
            Accept-Charset: utf-8
            X-FORWARDED-HOST: localhost


+ Response 200 (application/json)

    + Headers

    + Body
    
    + Attributes
        + _embedded
            + jobs (array[MergeJobEvent])
        + _links (Paging)


### get job  [GET /careersite/v1/m2m/opportunity{?jobid}]

Returns a specific job opportunity based on a job id.

+ Parameters

    + jobid (required, string, `1234-abc`) ... the job id returned in the job summary
    
+ Request (application/json)

    + Headers
    
            Accept-Charset: utf-8
            X-FORWARDED-HOST: localhost


+ Response 200 (application/json)

    + Headers

    + Body
    
    + Attributes
        + _embedded
            + job (MergeJobEvent)


### list all available locations  [GET /careersite/v1/m2m/locations]

Returns a list of all locations present in the database, regardless of job status. It's without
pagination for 

+ Request (application/json)

+ Response 200 (application/hal+json)

    + Headers

    + Body
    
    + Attributes
        + _embedded
            + locations (array[GeoLocation])


### list all available keywords  [GET /careersite/v1/m2m/keywords]

Returns a list of all keywords present in the database, regardless of job status.
@Gergely- Please advise what this is.  

+ Request (application/json)

+ Response 200 (application/hal+json)

    + Headers

    + Body
    
            ["java", "kafka", "spring"]

    + Schema
    
            {
                "$schema": "http://json-schema.org/draft-06/schema#",
                "id": "Career Site List of keywords",
                "type": "array",
                "items": {
                    "type": "string"
                }
            }
            
            
            
# Data Structures            
            
## JobEventList
+ merge_events (array[MergeJobEvent]) - an array of create/update job events
+ delete_events (array[DeleteJobEvent]) - an array of delete job events

## MergeJobSummaryEvent
+ id: `dsahg326253` (string, required) - the id of the posting in the source system
+ position_id: `sdaghf-123` (string, optional) - the id in the source system of the position the job ad is referring to (has to match master data import)
+ department_id: `jktuuk/364` (string, optional) - the id in the source system of the orgunit (has to match master data import)
+ brand: `Converse` (string, required) - the name of the brand the job is for like Converse for Nike
+ translations (array[JobOfferingTranslation], optional) - an array of language translations of text fields of the job ad
+ start_date: `2018-05-01` (string, optional) - ISO 8601 date and time from when the position should be available for application
+ end_date: `2018-06-01` (string, optional) - ISO 8601 date and time from until the position should be available for application
+ posting_start_date: `2018-05-01` (string, optional) - ISO 8601 date and time from when the job ad should be visible
+ posting_end_date: `2018-05-30` (string, optional) - ISO 8601 date and time until when the job ad should be visible
+ location (GeoLocation, optional) - The location where the job is available. The name is a direct value, not a reference list item. Location search works against this field.
+ coporate_function: engineering (string, optional) - The positions Corporate Function. It is a direct value, not a reference list item. The uploader must make sure that the tags are consistent over time, as it influences search quality.  Note that Avature they are often entered by hand. Some Avature and all Taleo come from SAP, and so are more consistent.
+ division: Manufacturing (string, optional) - Corporate, Retail, Distribution, Manufacturing. The division the position is under. Possibly determined by the Corporate Function.  Available in Taleo, Possibly not in Avature.


## MergeJobEvent
+ id: `dsahg326253` (string, required) - the id of the posting in the source system
+ position_id: `sdaghf-123` (string, optional) - the id in the source system of the position the job ad is referring to (has to match master data import)
+ department_id: `jktuuk/364` (string, optional) - the id in the source system of the orgunit (has to match master data import)
+ owner_id: `dsagf/123` (string, optional) - the id in the source system of the hiring manager of the job (has to match master data import)
+ brand: `Converse` (string, required) - the name of the brand the job is for like Converse for Nike
+ band: `Director` (string, optional) - the level of the job- Director, Individual Contributor, Junior, Manager, Executive, Entry Level, Team Leader, 
+ translations (array[JobOfferingTranslation], optional) - an array of language translations of text fields of the job ad
+ status: `ACTIVE` (enum, required) - the status of the job ad
    + DRAFT - non-completed job ad, serves as a placeholder for future completion
    + ACTIVE - a job ad to be displayed
    + INACTIVE - a job ad that is kept for some reason, but not to be displayed
+ start_date: `2018-05-01` (string, optional) - ISO 8601 date and time from when the position should be available for application
+ end_date: `2018-06-01` (string, optional) - ISO 8601 date and time from until the position should be available for application
+ posting_start_date: `2018-05-01` (string, optional) - ISO 8601 date and time from when the job ad should be visible
+ posting_end_date: `2018-05-30` (string, optional) - ISO 8601 date and time until when the job ad should be visible
+ location (GeoLocation, optional) - The location where the job is available. The name is a direct value, not a reference list item. Location search works against this field.
+ keywords: java, spring, kafka (array[string], optional) - List of keywords tagging the job. It's a list of direct values, not a reference list items. The uploader must make sure that the tags are consistent over time, as it influences search quality.
+ coporate_function: engineering (string, optional) - The positions Corporate Function. It is a direct value, not a reference list item. The uploader must make sure that the tags are consistent over time, as it influences search quality.  Note that Avature they are often entered by hand. Some Avature and all Taleo come from SAP, and so are more consistent.
+ division: Manufacturing (string, optional) - Corporate, Retail, Distribution, Manufacturing. The division the position is under. Possibly determined by the Corporate Function.  Available in Taleo, Possibly not in Avature.
+ relocation: false (boolean, required) - True or False.  Default to False.
+ source: `Avature (string, required) -Indicator of the source ATS.  Taleo or Avature.  Could also be a code. Could be inferred by the Apply URL 

## DeleteJobEvent
+ id: `dsahg326253` (string, required) - the id of the posting in the source system

## JobOfferingTranslation
+ language: `en` (string, required) - ISO 639-1 language code
+ is_default: true (boolean, required) - indicates which of the translations is the default one. there should be only one set to true.
+ title: `Java guru with Spring and Kafka` (string, optional) - title of the job post
+ responsibilities: `Lorem ipsum...` (string, optional) - the responsibilities block of the job ad
+ qualifications: `Lorem ipsum...` (string, optional) - the qualifications block of the job ad
+ benefits: `Lorem ipsum...` (string, optional) - the benefits block of the job ad
+ additional_information: `Lorem ipsum...` (string, optional) - the additional information block of the job ad
+ position_type: `Full Time` (string, optional) - Full Time, Part Time. Not always entered
+ apply_url: `http://jobs.mycompany.com/apply/eab208ac-8dea-43a4-901b-9f4f3510fe73` (string, optional) - url external to marketplace to apply to the job

## GeoLocation
+ administrational (AdministrationalGeoLocation, required) - location designated by country, province, etc
+ numerical (NumericalGeoLocation, optional) - location designated by coordinates

## AdministrationalGeoLocation
+ Geo: NorthAmerica ( string, required ) - Geo of the country. Will be a code- not "NorthAmerica". This is derived field.
+ country: `USA` (string, required) - country
+ state_province: `Oregon` (string, required) - state or province
+ city: `Portland` (string, required) - city
+ postal_code: `12345` (string, optional) - postal code ( NOT available in taleo and avature )

## NumericalGeoLocation
+ latitude: `45.5231` (number, required) - latitude of the same location as of administrational
+ longitude: `122.6765` (number, required) - longitude of the same location as of administrational

## Paging
+ self (required)
    + href: `/careersite/v1/m2m/opportunities?newer_than=2018-06-01&limit=50&offset=100&with_details=false` (string, required) 
+ first (required)
    + href: `/careersite/v1/m2m/opportunities?newer_than=2018-06-01&limit=50&offset=0&with_details=false` (string, required)
+ prev (required)
    + href: `/careersite/v1/m2m/opportunities?newer_than=2018-06-01&limit=50&offset=50&with_details=false` (string, required)
+ next (required)
    + href: `/careersite/v1/m2m/opportunities?newer_than=2018-06-01&limit=50&offset=150&with_details=false` (string, required)